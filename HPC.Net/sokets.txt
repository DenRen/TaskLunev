1.1) Введение

Протокол   - соглашение о порядке взаимодействия программ
Веб-сервер - обычное рассматривается как daemon.
Веб-клиент - браузер.

Иногда нужно использовать поддежрку асинхонного обратного вызова (async callback)

Клиент <---- Канал связи ----> Сервер

Стек протоколов TCP/IP - набор протоколов Интернета

Клиент <--------v
Клиент <------> Сервер
Клиент <--------^

Клиенты и серверы используют протокол управления передачей (Transmission Control Protocol, TCP),
TCP использует протокол Интеренета (IP), а IP устанавливает соединение с протоколом канального
уровня.

Веб-клиент                 Веб-клиент               Уровень приложений
    ^                           ^
    |                           |       
    v                           v   
   TCP                         TCP                  Траснпортный уровень
    ^                           ^
    |                           |                   
    v                           v      
    IP                          IP                  Сетевой уровень
    ^                           ^
    |                           |           
    v                           v       
Драйвер Ethernet  ------   Драйвер Ethernet         Канальный уровень

Протокол управления передачей (Transmission Control Protocol, TCP)
Протокол пользовательских дейтаграмм (User Datagram Protocol, UDP)

Локальная  сеть - Local Area Network, LAN
Глобальная сеть - Wide  Area Network, WAN   (Через маршрутизаторы)

1.7) Модель OSI:                Набор протоколов Интернета
    1) Уровень приложения       // Модель приложения
    2) Уровень представления    // *
    3) Уровень сеанса           // *

    4) Траснпортный уровень     // TCP, , UDP
    5) Сетевой уровень          // IPv4, IPv6

    6) Канальный уровень        // Аппаратное обеспечение драйверов
    7) Физический уровень       // устройств и сетей

Максимальная единица трансляции (MTU): 1500 байт
TCP, UDP, SCTP
Можно использовать IPv4 и IPv6 непосредственно: 
    Символьные сокеты (raw socket)

Определение топологии сети:
    netstat, ifconfig

Административный каталог: /sbin, /usr/sbin

2. Транспортный уровень

Протокол управления передачей потоков (Stream Control Transmission Protocol, SCTP)

Трёхэтапное рукопожатие TCP
Последовательность прерывания соединения TCP
Состояние TCP (TIME_WAIT)
Четырёхэтапное рукопожатие и завершение соединения SCTP
Буфуризация TCP, UDP и SCTP уровнем сокетов
Т.д.

BPF - BSD Packet Filter
DLPI - Data Link Provider Interface

Linux предоставляет доступ к канальному уровню при помощи
специального типа сокетов SOCK_PAKET

Разные проги: tcpdump, ping, traceroute

    1) IPv4 предоставляет сервис пакетов для TCP, UDP, SCTP, ICMP и IGMP
    1) IPv6 предоставляет сервис пакетов для TCP, UDP, SCTP, ICMPv6
    3) Проотокол управления передачей. TCP: IPv4, IPv6
    4) UDP: Протокол пользовательских дейтаграмм. IPv4, IPv6
    5) SCTP: Протокол управления передачей потоков. двусторонняя ассоциация
        Несколько IP-адресов и один порт для каждой стороный соединения.
        Есть сообщения. Одновременно может использовать IPv4 и IPv6
    6) ICMP: Протокол управляющих сообщений Интернета. 
        Обеспечение передачу управляющей информации и сведений об ошибках между
        маршрутизаторами и узлами
    7) IGMP: Протокол управления группами Интернета.
        Используется для многоадресной адресации
    8) ARP: Протокол разрешения адресов.
        Ставит соотв. аппаратному адресу (напр. Ethernet) адрес IPv4
    9) RARP: Протокол обратного разрешения адресов.
        Ставит соотв. адресу IPv4 аппаратномый адрес (напр. Ethernet) 
    10) BPF: Фильтр пакетов BSD. Предоставл. доступ к канальному уровню дял процесса
    11) DLPI: Интерфейс провайдера канального уровня.
        Предоставляет доступ к канальному уровню

Приложение записывает в сокет дейтаграмму (datagram), которая инкапсулируется (encapsulate)
(упаковывается) в дейтаграмму IPv4, либо в IPv6. UDP - не гарантирует, что дойдёт сообщение.

UDP - имеет конкретную длину дейтаграммы, т.е. рассм. как запись (record)
TCP - является потоковым (byte-stream) протоколом, без каких-либо границ записей (отличие от UDP)

TCP устанавливает соединение (connection) и обеспечивает надёжность reliability()

TCP динамически прогназирует время (период) обращения (round-trip time, RTT) между клиентом и 
сервером. TCP постоянно пересчитывает RTT.
TCP упорядочивает данные, связывая некоторый порядковый номер с каждым отправленныйм им байтом

Сегмент (segment) - это блок данных, передаваемых протоколом TCP протоколу IP.
TCP игнорирует дублированные данные (определяет их по номерам байт)

TCP обеспечивает управление потоком (flow control). TCP всегда сообщает своему собеседнику,
сколько именно байтов он хочет получить от него. Это называется объявлением окна (window).
В любой момент времени окно соответствует свободному пространству в буфере получателя. Размер
окна изменяется динамически и может обнулиться, при этом отправитель должен подождать, когда
приложение считает данные из буфера.

TCP является двусторонним (full-duplex)

SCTP: ассоциация означает взаимодействие двух систем, которые могут иметь по несолько адресов.
Это называет multihomig - множественная адресация.
SCTP, как и UDP, передаёт сообщения и их размер.
SCTP из-за множественной адресации обеспечивается дополнительная устойчиваость в случае отказа 
сети. (Для TCP такое тоже можно реализовать, если использовать протоколом маршрутизации BGP.
BGP соединение внутри домена (iBGP) часто используют адреса, назчнаемые виртуальному интерфейсу
маршрутизатора в качестве конечных точек соединения TCP.
Протокол маршрутизации домена гарантирует, что если между двумя маршрутизаорами будет хоть
какой-то досупный путь, он будет использован, что было бы невозможно, если бы испольлзуемые
адреса принадлежали интерфейсу сети, где возникли проблемы)

2.6) Установление и завершение соединения TCP

Трёхэтапное рукопожатие
    1) Сервер должен быть готов принять входящее соединение. (socket, bind, listen)
       Это называется пассивное открытие (passive open)
    2) Клиент выполняет активное открытие (active open) вызывая connect. Это заставляет
       клиента TCP послать сегмент SYN, чтобы сообщить серверу начальный порядковый номер
       данных, которые клиент будет посылать по соединению. Обычно с сегментом SYN не
       посылается никаких данных: он содержит только заголовок IP, заголовок TCP, и возможно
       параметры TCP.
    3) Сервер должен подтвердить получение клиентсокго сегмента SYN, а также должен послать
       свой собственный сегмент SYN, содержащий начальный порядковый номер для данных, которые
       сервер будет посылать по соединению.
       Сервер посылает SYN и ACK - подтверждение приёма клиентского SYN - в виде единственного
       сегмента. (ACK - acknowledgement)
    4) Клиент должен подтвердить получение сегмента SYN сервера.

Параметры TCP
    1) MSS (max segment size) узел, отпр-ий. SYN, объявляет макс. кол-во данных, которое он
       будет принимать в каждом сегменте TCP на этом соединеии. TCP_MAXSEG
    2) Параметр масштабирования окна (Window scale option). Сдвигает максимальный рамер окна,
       который может быть установлен в заголовке TCP (max = 65 535), влево на 0-14 разрядов.
       Т.е. предоставляя макс. возможное окно рамером 65536 * 2^14 ~ 1Гбайт. SO_RCVBUF
    3) Временная метка (Timestamp option)

Завершение соединения TCP
    1) Приложение вызывает close (конечная точка TCP выполняет активное закрытие (active close))
       TCP этого узла отправляет сегмент FIN, обознач. прекращение передачи
    2) Узел, получающий FIN, выполняет пассивное закрытие (passive close). Полученный FIN
       подтверждается TCP (с помощью ACK). Получение FIN передаётся приложению как признак конца
       файла.
    3) Приложение, получившее признак конца файла, вызывает close. При этом его TCP отправляет
       сегмент FIN.
    4) TCP системы, получающий окончательный FIN (где произошло активное закрытие), подтверждает
       получение FIN.

Вложенное подтверждение (piggybacking)

2.7) Состояние TIME_WAIT

Продолжительность TIME_WAIT равна двум MSL (maximum segment lifetime - макс. время жизни сегмента)
MSL - это макс. кол-во времени, в течении которого дейтаграмма IP может оставаться в сети.
Каждая дейтаграмма содержит 7-разрядное поле предельного кол-ва прыжков (hop limit)
Могут возникать пелти маршрутизации. Покет, который блуждает по сети больше MSL, называется
потерянной копией или дубликатом (lost duplicate), а также блуждающей копией (wandering).
TCP обрабатывает эти дублированные пакеты.

    Если в новом соединении IP-адреса и порты те же, что и в только что закрытом, то новое
называется воплощениемм (incarnation)

2.9) Номера портов
UDP, TCP, SCTP различают процессы при помощи 16-разрядныз целых чисел - номеров портов.
Группа заранее известных портов (well-known ports). Динамически назначаемые, или эфемерные
(ephemeral) (т.е. с непродолжительным временем жизни).

IANA (Internet Assigned Numbers Authority):
    1) Заранее известные порты: 0 - 1023
    2) Зарегестрированные порты: 1024 - 49151
    3) Динамические, или частные порты: 49152 - 65535

Пара сокетов:
    1) локальный IP, локальный порт TCP
    2) удалённый IP, удалённый порт TCP 

3) Введение в сокеты

inet_addr, inet_ntoa - для IPv4
inet_pton, itet ntop - для IPv4 и IPv6